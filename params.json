{"name":"fzz","tagline":"fzz makes your command line interactive!","body":"### Do one thing, do it well â€” multiple times!\r\n\r\n**fzz** allows you to change the input of a single command interactively. Have a\r\nlook and pay close attention to the bee's knees here:\r\n\r\n![fzz-gif-cast2](https://s3-eu-west-1.amazonaws.com/fzz/fzz_demo.gif)\r\n\r\n## Installation\r\n\r\nCurrent version: 1.0.1\r\n\r\n### Download the binaries\r\n\r\nDownload the [current release](https://github.com/mrnugget/fzz/releases) for\r\nyour platform and copy the **fzz** binary to your `$PATH`.\r\n\r\n### Compile from source\r\n\r\nMake sure you have Go installed. Then install **fzz** from source:\r\n\r\n```\r\ngo get github.com/mrnugget/fzz\r\n```\r\n\r\n## Usage\r\n\r\nThe general usage pattern is this:\r\n\r\n```bash\r\nfzz [command with {{}} placeholder]\r\n```\r\n\r\nExample: using **fzz** and `grep` to search through all `*.go` files in the current\r\ndirectory.\r\n\r\n```\r\nfzz grep {{}} *.go\r\n```\r\n\r\nRunning this presents you with a prompt that allows you to change what `grep`\r\nwill use as its search pattern by replacing `{{}}`.\r\n\r\nAfter every input change **fzz** will rerun `grep` with the new input and\r\nshow you what `grep` wrote to its STDOUT or, hopefully not, to its STDERR.\r\n\r\nOnce you're happy with the presented results simply press **return** to quit\r\n**fzz** and have the results printed to STDOUT.\r\n\r\nSince the results will be printed to STDOUT you can use **fzz** with pipes:\r\n\r\n```\r\nfzz grep {{}} *.go | head -n 1 | awk -F\":\" '{print $1}'\r\n```\r\n\r\n**fzz** buffers its STDIN and passes it on to the specified command. That means\r\nyou can put pipes all around it:\r\n\r\n```\r\ngrep 'func' *.go | fzz grep {{}} | head -n 1\r\n```\r\n\r\nIf you want to change the placeholder, you can do that by specifying it with the\r\nenvironment variable `FZZ_PLACEHOLDER`:\r\n\r\n```\r\nFZZ_PLACEHOLDER=%% fzz grep %% *.go\r\n```\r\n\r\n## Usage Examples\r\n\r\n### Searching with ag\r\n\r\nUse **fzz** to search through your current directory with\r\n[the_silver_searcher](https://github.com/ggreer/the_silver_searcher)\r\ninteractively:\r\n\r\n```\r\nfzz ag {{}}\r\n```\r\n\r\n### fzz and find for interactive file search\r\n\r\nWe can combine `find` and `fzz` to interactively search for files that match our\r\ninput pattern:\r\n\r\n```\r\nfzz find ./Documents -iname \"*{{}}*\"\r\n```\r\n\r\n### Use it in Vim to grep through your project\r\n\r\nUse it as interactive project search in vim\r\n\r\n```\r\n:set grepprg=fzz\\ ag\\ \\{\\{\\}\\}\r\n```\r\n\r\nThen use `:grep` in Vim to start it. **fzz** will then fill the quickfix window\r\nwith its results.\r\n\r\nOr use the placeholder Vim provides to set the initial input of fzz:\r\n\r\n```\r\nset grepprg=fzz\\ ag\\ --nogroup\\ --nocolor\\ \\{\\{\\$*}\\}\r\n```\r\n\r\nThen you can use `:grep mysearchterm`, see the results and refine them if\r\nnecessary.\r\n\r\n### Interactively search files and open the results in your editor\r\n\r\nPut this in your shell config and configure it to use your favorite editor:\r\n\r\n```bash\r\nvimfzz() {\r\n  vim $(fzz ag {{}} | awk -F\":\" '{print $1}' | uniq)\r\n}\r\n```\r\n\r\n## Contributing\r\n\r\nGo ahead and open a issue or send a pull request. Fork it, branch it, send it.\r\n\r\n## Contributors\r\n\r\nThanks to [ebfe](http://github.com/ebfe) for fixing a ton of bugs, adding\r\nfeatures and offering suggestions!\r\n\r\n## License\r\n\r\nMIT, see [LICENSE](LICENSE)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}